<?php
/** @var $block \Magento\Checkout\Block\Onepage */
/** @var \Magento\Framework\View\Helper\SecureHtmlRenderer $secureRenderer */
?>
<div id="checkout" data-bind="scope:'checkout'" class="checkout-container">
    <div id="checkout-loader" data-role="checkout-loader" class="loading-mask" data-mage-init='{"checkoutLoader": {}}'>
        <div class="loader">
            <img src="<?= $block->escapeUrl($block->getViewFileUrl('images/loader-1.gif')) ?>"
                 alt="<?= $block->escapeHtmlAttr(__('Loading...')) ?>">
        </div>
    </div>
    <?= /* @noEscape */ $secureRenderer->renderStyleAsTag("position: absolute;", "#checkout-loader img") ?>
    <!-- ko template: getTemplate() --><!-- /ko -->
    <?= $block->getChildHtml() ?>
    <script type="text/x-magento-init">
        {
            "#checkout": {
                "Magento_Ui/js/core/app": <?= /* @noEscape */ $block->getJsLayout() ?>
            }
        }
    </script>
    <?php $serializedCheckoutConfig = /* @noEscape */ $block->getSerializedCheckoutConfig();
    $productAttribute = $this->helper(Smartblinds\Checkout\Helper\ProductAttribute::class);
    $jsonRemoveControlType = [];
    if(!$productAttribute->isChainCustomerGroup()) {
        /**
         * @var \Smartblinds\Checkout\Helper\ProductAttribute $productAttribute
         */
        $controlTypeAttr = $productAttribute->getAttribute('control_type');
        $unserializedCheckoutConfig = json_decode($serializedCheckoutConfig, true);
        $attrOptions = $controlTypeAttr->getOptions();
        $controlTypeTitles = $controlTypeAttr->getFrontendLabels();
        $ctTypeTitles = [$controlTypeAttr->getDefaultFrontendLabel()];

        /**
         * @var \Magento\Eav\Api\Data\AttributeFrontendLabelInterface $controlTypeTitle
         */
        foreach ($controlTypeTitles as $controlTypeTitle) {
            $ctTypeTitles[] = $controlTypeTitle->getLabel();
        }
        $totalsDataItems = $unserializedCheckoutConfig['totalsData']['items'] ?? [];
        foreach ($totalsDataItems as $key => $item) {
            $options = json_decode($item['options'], true);
            foreach ($options as $keyOption => $option) {
                /**
                 * @var \Magento\Eav\Api\Data\AttributeOptionInterface $attrOption
                 */
                foreach ($attrOptions as $attrOption) {
                    if ($option['value'] === $attrOption->getLabel() && in_array($option['label'], $ctTypeTitles)) {
                        $jsonRemoveControlType = ['value' => $option['value'], 'label' => $option['label']];
                        break(2);
                    }
                }
            }
        }
    }
    $jsonRemoveControlType = json_encode($jsonRemoveControlType);
    $scriptString = <<<script
        window.checkoutConfig = {$serializedCheckoutConfig};
        window.quoteItemCanOptionRemove = {$jsonRemoveControlType};
        // Create aliases for customer.js model from customer module
        window.isCustomerLoggedIn = window.checkoutConfig.isCustomerLoggedIn;
        window.customerData = window.checkoutConfig.customerData;
script;
    ?>
    <?= /* @noEscape */ $secureRenderer->renderTag('script', [], $scriptString, false) ?>
    <?php $scriptString = <<<script
        require([
            'mage/url',
            'Magento_Ui/js/block-loader'
        ], function(url, blockLoader) {
            blockLoader("{$block->escapeJs($block->escapeUrl($block->getViewFileUrl('images/loader-1.gif')))}");
            return url.setBaseUrl('{$block->escapeJs($block->escapeUrl($block->getBaseUrl()))}');
        })
script;
    ?>
    <?= /* @noEscape */ $secureRenderer->renderTag('script', [], $scriptString, false) ?>
</div>
